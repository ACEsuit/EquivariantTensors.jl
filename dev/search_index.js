var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"Public API","title":"Public API","text":"","category":"section"},{"location":"benchmarking/#Benchmarking-Instructions","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"","category":"section"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"For general reference see BenchmarkTools.jl manual.","category":"page"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"A simple way to run benchmarks is to call","category":"page"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"using BenchmarkTools\nusing PkgBenchmark\nusing EquivariantTensors\n\nbench = benchmarkpkg(EquivariantTensors)\nresults = bench.benchmarkgroup\n\n# You can search with macro \"@tagged\"\nresults[@tagged \"derivative\" && \"Chebyshev\"]","category":"page"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"You can create BenchmarkConfig to control benchmark","category":"page"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"t2 = BenchmarkConfig(env = Dict(\"JULIA_NUM_THREADS\" => 2))\nbench_t2 = benchmarkpkg(EquivariantTensors, t2)","category":"page"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"Benchmarks can be saved to a file with","category":"page"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"export_markdown(\"results.md\", bench)","category":"page"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"Comparing current branch to another branch","category":"page"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"# current branch to \"origin/main\"\nj = judge(EquivariantTensors, \"origin/main\")","category":"page"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"Benchmark scaling to different number of threads","category":"page"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"t4 = BenchmarkConfig(env = Dict(\"JULIA_NUM_THREADS\" => 4))\nt8 = BenchmarkConfig(env = Dict(\"JULIA_NUM_THREADS\" => 8))\n\n# Compare how much changing from 4-threads to 8 improves the performance\nj = judge(EquivariantTensors, t8, t4)\n\nshow(j.benchmarkgroup)","category":"page"},{"location":"benchmarking/#CI-Benchmarks","page":"Benchmarking Instructions","title":"CI Benchmarks","text":"","category":"section"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"Benchmarks can be run automatically on PR's by adding label \"run benchmark\" to the PR.","category":"page"},{"location":"benchmarking/#Adding-more-benchmarks","page":"Benchmarking Instructions","title":"Adding more benchmarks","text":"","category":"section"},{"location":"benchmarking/","page":"Benchmarking Instructions","title":"Benchmarking Instructions","text":"Take a look at benchmark/benchmarks.jl for an example. If your benchmark depends on additional packages you need to add the package to benchmark/Project.toml.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = EquivariantTensors","category":"page"},{"location":"#EquivariantTensors","page":"Home","title":"EquivariantTensors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"These pages will contain the documentation for EquivariantTensors.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [EquivariantTensors]","category":"page"},{"location":"docstrings/#Docstrings","page":"Docstrings","title":"Docstrings","text":"","category":"section"},{"location":"docstrings/","page":"Docstrings","title":"Docstrings","text":"CurrentModule = EquivariantTensors\nDocTestSetup = quote\n    using EquivariantTensors\nend","category":"page"},{"location":"docstrings/","page":"Docstrings","title":"Docstrings","text":"This page lists all docstrings in EquivariantTensors.jl including for functions that are not part of the public API. Please check with the Public API which functionality for which we aim to guarantee semver-stability.","category":"page"},{"location":"docstrings/","page":"Docstrings","title":"Docstrings","text":"Modules = [EquivariantTensors, EquivariantTensors.O3]","category":"page"},{"location":"docstrings/#EquivariantTensors.O3.coupling_coeffs","page":"Docstrings","title":"EquivariantTensors.O3.coupling_coeffs","text":"O3.coupling_coeffs(L, ll, nn; PI, basis)\nO3.coupling_coeffs(L, ll; PI, basis)\n\nCompute coupling coefficients for the spherical harmonics basis, where \n\nL must be an Integer;\nll, nn must be vectors or tuples of Integer of the same length.\nPI: whether or not the coupled basis is permutation-invariant (or the \n\ncorresponding tensor symmetric); default is true when nn is provided  and false when nn is not provided.\n\nbasis: which basis is being coupled, default is complex, alternative\n\nchoice is real, which is compatible with the SpheriCart.jl convention.  \n\n\n\n\n\n","category":"function"}]
}
